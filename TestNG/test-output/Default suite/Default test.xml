<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-7DFPOSF2" ignored="0" name="Default test" tests="3" failures="0" timestamp="2020-05-30T11:31:14 EDT" time="1.584" errors="0">
  <testcase name="@BeforeMethod setUp" time="1.544" classname="com.utils.BaseClass">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="session not created: This version of ChromeDriver only supports Chrome version 81
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:25:48&amp;apos;
System info: host: &amp;apos;LAPTOP-7DFPOSF2&amp;apos;, ip: &amp;apos;192.168.20.82&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_251&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00305F73+2449267]
	Ordinal0 [0x00238361+1606497]
	Ordinal0 [0x0012F969+522601]
	Ordinal0 [0x000C05F3+67059]
	Ordinal0 [0x000BCD92+52626]
	Ordinal0 [0x000DC127+180519]
	Ordinal0 [0x000DBF2D+180013]
	Ordinal0 [0x000D9E5B+171611]
	Ordinal0 [0x000C1DD8+73176]
	Ordinal0 [0x000C2E50+77392]
	Ordinal0 [0x000C2DE9+77289]
	Ordinal0 [0x0024D8D7+1693911]
	GetHandleVerifier [0x003A4036+522726]
	GetHandleVerifier [0x003A3D74+522020]
	GetHandleVerifier [0x003B9187+609079]
	GetHandleVerifier [0x003A48A6+524886]
	Ordinal0 [0x00245CBC+1662140]
	Ordinal0 [0x0024F23B+1700411]
	Ordinal0 [0x0024F3A3+1700771]
	Ordinal0 [0x00265215+1790485]
	BaseThreadInitThunk [0x74B46359+25]
	RtlGetAppContainerNamedObjectPath [0x77127C24+228]
	RtlGetAppContainerNamedObjectPath [0x77127BF4+180]
	(No symbol) [0x00000000]
">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 81
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'LAPTOP-7DFPOSF2', ip: '192.168.20.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00305F73+2449267]
Ordinal0 [0x00238361+1606497]
Ordinal0 [0x0012F969+522601]
Ordinal0 [0x000C05F3+67059]
Ordinal0 [0x000BCD92+52626]
Ordinal0 [0x000DC127+180519]
Ordinal0 [0x000DBF2D+180013]
Ordinal0 [0x000D9E5B+171611]
Ordinal0 [0x000C1DD8+73176]
Ordinal0 [0x000C2E50+77392]
Ordinal0 [0x000C2DE9+77289]
Ordinal0 [0x0024D8D7+1693911]
GetHandleVerifier [0x003A4036+522726]
GetHandleVerifier [0x003A3D74+522020]
GetHandleVerifier [0x003B9187+609079]
GetHandleVerifier [0x003A48A6+524886]
Ordinal0 [0x00245CBC+1662140]
Ordinal0 [0x0024F23B+1700411]
Ordinal0 [0x0024F3A3+1700771]
Ordinal0 [0x00265215+1790485]
BaseThreadInitThunk [0x74B46359+25]
RtlGetAppContainerNamedObjectPath [0x77127C24+228]
RtlGetAppContainerNamedObjectPath [0x77127BF4+180]
(No symbol) [0x00000000]

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.utils.BaseClass.setUp(BaseClass.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:64)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:364)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:318)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="-1.590852674618E9" classname="com.utils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="-1.590852674619E9" classname="com.utils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="-1.590852674624E9" classname="com.utils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="-1.590852674625E9" classname="com.utils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="-1.590852674627E9" classname="com.utils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="emptyUsername" time="0.0" classname="com.test.LoginTest">
    <skipped/>
  </testcase> <!-- emptyUsername -->
  <testcase name="invalidAdminLogin" time="0.0" classname="com.test.LoginTest">
    <skipped/>
  </testcase> <!-- invalidAdminLogin -->
  <testcase name="validAdminLogin" time="0.0" classname="com.test.LoginTest">
    <skipped/>
  </testcase> <!-- validAdminLogin -->
</testsuite> <!-- Default test -->
